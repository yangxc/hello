# This references the default golang container from
# the Docker Hub: https://registry.hub.docker.com/u/library/golang/
# If you want Google's container you would reference google/golang
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: golang

dev:
    steps:
        - setup-go-workspace:
            package-dir: github.com/yangxc/hello			
        - script:
            name: env
            code: env
        - script:
            name: go get
            code: |
                cd $WERCKER_SOURCE_DIR
                go version
                go get -u github.com/Masterminds/glide
                export PATH=$WERCKER_SOURCE_DIR/bin:$PATH
                glide install
        - internal/watch:
            code: go run main.go
            reload: true
build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    # Sets the go workspace and places you package
    # at the right place in the workspace tree
    - setup-go-workspace:
        package-dir: github.com/yangxc/hello
    - script:
        name: env
        code: env

    # Gets the dependencies
    - script:
        name: go get
        code: |
            cd $WERCKER_SOURCE_DIR
            go version
            go get -u github.com/Masterminds/glide
            export PATH=$WERCKER_SOURCE_DIR/bin:$PATH
            glide install

    # Build the project
    - script:
        name: go build
        code: |
          go build

    # Test the project
    - script:
        name: go test
        code: |
          go test -v $(glide novendor)
    - script:
        name: copy files to wercker output
        code: |
            cp -R ./ ${WERCKER_OUTPUT_DIR}			
deploy:
    steps:
        - internal/docker-push:
            username: $DOCKER_USERNAME
            password: $DOCKER_PASSWORD
            cmd: /pipeline/source/hello
            ports: "8080"
            tag: latest
            repository: yangxiaochen621/hello
            registry: https://registry.hub.docker.com
        # - cng/cf-deploy:
        #     api: $API
        #     user: $USER
        #     password: $PASSWORD
        #     org: $ORG
        #     space: $SPACE
        #     appname: wercker-step-yangxc-hello
        #     docker_image: yangxc/hello
